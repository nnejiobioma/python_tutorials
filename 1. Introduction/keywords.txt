Keywords in python are reserved words in python that you cannot use as identifiers like variable names, function names etc in your code 
. Number and Categorization:

Python currently has 35 keywords (as of version 3.11).

You can find the complete list using the keyword.kwlist attribute in your code.

They are broadly categorized into:

Control Flow: if, else, elif, for, while, continue, break
Functions: def, return
Classes: class, pass
Data Types: None, True, False
Imports and Modules: import, from, as
Global Scope: global
Exceptions: raise
Assertions: assert
Asynchronous Programming: async, await
3. Special Cases:

True and False are considered keywords despite being capitalized because they represent Boolean values.
and, or, not are also keywords though they might seem like operators due to their functionality.

False, True, None: These are constants used to represent the Boolean values False, True, and None, respectively.

and, or, not: These are logical operators used for logical operations.

and is used to perform a logical AND operation.
or is used to perform a logical OR operation.
not is used to perform a logical NOT operation.
if, elif, else: These are used for conditional branching in Python.

if is used to execute a block of code if a condition is true.
elif (short for else if) is used to check additional conditions after the initial if statement.
else is used to execute a block of code if none of the previous conditions are true.
for, while: These are used for looping in Python.

for is used to iterate over a sequence (such as a list, tuple, or string).
while is used to repeatedly execute a block of code as long as a condition is true.
break, continue, pass: These are used within loops for control flow.

break is used to exit the loop prematurely.
continue is used to skip the current iteration of the loop and proceed to the next iteration.
pass is a null operation, used when a statement is required syntactically but you do not want to execute any code.
def, return: These are used for defining functions and returning values from functions, respectively.

def is used to define a function.
return is used to return a value from a function.
class, is, in: These are used for defining classes, identity testing, and membership testing, respectively.

class is used to define a class.
is is used for identity testing, checking if two variables refer to the same object.
in is used for membership testing, checking if a value exists in a sequence (such as a list, tuple, or string).